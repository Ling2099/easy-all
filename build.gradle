buildscript {
	ext {
		// noinspection GroovyAssignabilityCheck
		springBootVersion = '3.0.0'
	}

	repositories {
		// 本地仓库 => 代理仓库 => 镜像仓库 => 官方仓库
		mavenLocal()
		maven {
			allowInsecureProtocol = true
			url 'http://192.168.0.35:8081/repository/lzh_release/'
			// url 'http://192.168.0.110:8081/nexus/content/repositories/releases/'
		}
		maven {
			allowInsecureProtocol = true
			url 'http://192.168.0.35:8081/repository/lzh_snapshot/'
			// url 'http://192.168.0.110:8081/nexus/content/repositories/snapshots/'
		}
		maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
		// 配合 MyBatisPlus 3.5.2.7-SNAPSHOT 快照版的仓库, 解决 SpringBoot 3.0.0 与其注入时的异常
		maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
		mavenCentral()
	}

	dependencies {
		// 添加插件依赖路径（通过 jar 方式）
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
	id 'idea'
	id 'java-library'
	id 'io.spring.dependency-management' version '1.1.0'
}

description '项目开发整合包'

/** 全局通用配置 */
allprojects {
	group 'org.springframework.boot'

	// JDK17 预览功能
	tasks.withType(JavaCompile).all { options.compilerArgs += ['--enable-preview'] }
	// 跳过 JavaDoc 检查
	tasks.withType(Javadoc).all { enabled = false }
	// 去除 jar 包的附加标识
	tasks.withType(Jar) { archiveClassifier.set('') }

	repositories {
		// 本地仓库 => 代理仓库 => 镜像仓库 => 官方仓库
		mavenLocal()
		maven {
			allowInsecureProtocol = true
			url 'http://192.168.0.35:8081/repository/lzh_release/'
			// url 'http://192.168.0.110:8081/nexus/content/repositories/releases/'
		}
		maven {
			allowInsecureProtocol = true
			url 'http://192.168.0.35:8081/repository/lzh_snapshot/'
			// url 'http://192.168.0.110:8081/nexus/content/repositories/snapshots/'
		}
		maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
		// 配合 MyBatisPlus 3.5.2.7-SNAPSHOT 快照版的仓库, 解决 SpringBoot 3.0.0 与其注入时的异常
		maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
		mavenCentral()
	}
}

/** 子项目通用配置 */
subprojects {
	// java 是 Gradle 的核心插件, 内置的, 内置插件不需要配置依赖路径
	apply plugin: 'idea'
	// jar 包发布插件
	apply plugin: 'signing'
	apply plugin: 'maven-publish'
	// 让 Gradle 自动生成 Intellij 的项目文件
	apply plugin: 'java-library'
	// 注意 Gradle 插件不再自动应用, 所以这里需要指定
	apply plugin: 'org.springframework.boot'
	// 依赖管理插件仍然是一个 spring-boot-gradle-plugin 传递依赖, 所以无需在 build.gradle 配置中明确列出此依赖
	apply plugin: 'io.spring.dependency-management'

	// SNAPSHOT: 编码阶段
	// BETA:     测试阶段
	// RELEASE:  上线运行阶段
	group = 'com.github.Ling2099'
	version = '1.0.0'
	sourceCompatibility = 17
	targetCompatibility = 17

	// java 编译的时候缺省状态下会因为中文字符而失败
	[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

	// 发布签名
	afterEvaluate { project ->
		if (project.plugins.hasPlugin('java') || project.plugins.hasPlugin('java-library')) {
			project.tasks.withType(Sign.class) {
				if (it.name.startsWith("sign")) {
					it.enabled = true
				}
			}
		}
	}

	repositories {
		// 本地仓库 => 代理仓库 => 镜像仓库 => 官方仓库
		mavenLocal()
		maven {
			allowInsecureProtocol = true
			url 'http://192.168.0.35:8081/repository/lzh_release/'
			// url 'http://192.168.0.110:8081/nexus/content/repositories/releases/'
		}
		maven {
			allowInsecureProtocol = true
			url 'http://192.168.0.35:8081/repository/lzh_snapshot/'
			// url 'http://192.168.0.110:8081/nexus/content/repositories/snapshots/'
		}
		maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
		// 配合 MyBatisPlus 3.5.2.7-SNAPSHOT 快照版的仓库, 解决 SpringBoot 3.0.0 与其注入时的异常
		maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
		mavenCentral()
	}

	// compileOnly:        适用于编译期需要而不需要打包; 参与编译但不参与打包，依赖的包对其它工程不开放
	// runtimeOnly:        只在运行期有效, 编译时不需要（如 MySQL 驱动）
	// implementation:     在编译、运行时都有效, 依赖的包不对其它工程开放
	// testCompileOnly:    用于编译测试的依赖项，运行时不需要
	// testRuntimeOnly:    只在测试运行时需要，而不是在测试编译时需要
	// testImplementation: 针对测试代码（src/test 目录） 取代老版本中被移除的 testCompile
	// providedCompile:    编译、测试阶段代码需要依赖此类 jar 包, 而运行阶段容器已经提供了相应的支持, 所以无需将这些文件打入到 war 包中了
	// api:                参与编译和打包，依赖的包对其它工程开放
	// compileOnlyApi:     在声明模块和使用者在编译时需要的依赖项, 但在运行时不需要

	// 发布依赖至 maven 中央仓库
	publishing {
		publications {
			mavenJava(MavenPublication) {
				groupId project.group
				artifactId project.name
				version "${version}"
				from components.java

				pom {
					name = 'easy-all'
					description = '帮助 web 项目开发过程中，简化繁琐的配置、代码及业务逻辑'
					url = 'https://github.com/Ling2099/easy-all'
					licenses {
						license {
							name = 'Server Side Public License'
							url = 'https://www.mongodb.com/licensing/server-side-public-license'
						}
					}
					developers {
						developer {
							id = 'Ling2099'
							name = "${DEVELOPER_NAME}"
							email = "${DEVELOPER_EMAIL}"
						}
					}

					scm {
						connection = 'https://github.com/Ling2099/easy-all.git'
						developerConnection = 'https://github.com/Ling2099/easy-all.git'
						url = 'https://github.com/Ling2099/easy-all'
					}
				}
			}
		}
		repositories {
			maven {
				name 'maven2'
				url 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
				credentials {
					username = "${NEXUS_USERNAME}"
					password = "${NEXUS_PASSWORD}"
				}
			}
		}
	}

	signing {
		sign publishing.publications.mavenJava
	}

	java {
		withSourcesJar()
		withJavadocJar()
	}

	// 服务接口 API 文档
//	smartdoc {
//		configFile = file("src/main/resources/smart-doc.json")
//		include 'org.springframework.boot:spring-boot-starter-webflux'
//	}
}

project(':easy-cache') {
	dependencies {
		api 'org.springframework.boot:spring-boot-starter-data-redis:3.0.0'
		compileOnly 'com.liferay:com.fasterxml.jackson.annotations:2.10.3.LIFERAY-PATCHED-1'
		compileOnly 'com.liferay:com.fasterxml.jackson.databind:2.10.5.1.LIFERAY-PATCHED-1'
		compileOnly 'com.liferay:com.fasterxml.jackson.core:2.10.3.LIFERAY-PATCHED-1'
	}
}

project(':easy-orm') {
	dependencies {
		api 'org.springframework.boot:spring-boot-starter-aop:3.0.0'
		api 'com.baomidou:mybatis-plus-boot-starter:3.5.3'
		compileOnly 'com.liferay:com.fasterxml.jackson.annotations:2.10.3.LIFERAY-PATCHED-1'
	}
}

project(':easy-web') {
	dependencies {
		api project(':easy-basic')
		api project(':easy-orm')
		implementation 'org.springframework:spring-webflux:6.0.2'
	}
}